name: unit-test

on:
  workflow_dispatch:
  pull_request:
  push:
    branches: [next, qa, main]
    tags: ['v*']

jobs:
  linux:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@v4
      - uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          channels: conda-forge,defaults
          use-mamba: true
          environment-file: environment.yml
          activate-environment: test
      - name: install additional dependencies
        run: |
          echo "installing additional dependencies if cannot be installed from conda"
      - name: run unit tests
        run: |
          echo "running unit tests (CPU)"
          python -m pytest --cov=src --cov-report=xml --cov-report=term-missing -m "not cuda_required"
      - name: upload coverage to codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: build conda package
        run: |
          # test that the conda package builds
          cd conda.recipe
          echo "versioningit $(versioningit ../)"
          # conda channels could have been defined in the conda-incubator, but you can copy/paste the lines
          # below to build the conda package in your local machine
          CHANNELS="--channel mantid/label/main --channel conda-forge"
          VERSION=$(versioningit ../) conda mambabuild $CHANNELS --output-folder . .
          conda verify noarch/bm3dornl*.tar.bz2

  linux_gpu:
    runs-on: github-gpu-builder
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@v4
      - uses: conda-incubator/setup-miniconda@v3
        with:
          miniforge-version: "latest"
          auto-update-conda: true
          channels: conda-forge,defaults
          use-mamba: true
          environment-file: environment.yml
          activate-environment: test
      - name: install additional dependencies
        run: |
          echo "installing additional dependencies if cannot be installed from conda"
      - name: run unit tests
        run: |
          echo "running unit tests (GPU)"
          python -m pytest --cov=src --cov-report=xml --cov-report=term-missing -m "cuda_required"
